
_CRC8_values = {
    0x0d: 0x33, 0x0e: 0x66, 0x0f: 0xa2, 
    0x10: 0x56, 0x11: 0x92, 0x12: 0xc7, 0x13: 0x03, 0x14: 0x6d, 0x15: 0xa9, 0x16: 0xfc, 0x17: 0x38, 0x18: 0x20, 0x19: 0xe4, 0x1a: 0xb1, 0x1b: 0x75, 0x1c: 0x1b, 0x1d: 0xdf, 0x1e: 0x8a, 0x1f: 0x4e,
    0x20: 0x7b, 0x23: 0x2e, 0x25: 0x84, 0x29: 0xc9, 0x2b: 0x58, 0x2c: 0x36, 0x2e: 0xa7, 0x2f: 0x63,
    0x30: 0x97, 0x31: 0x53, 0x32: 0x06, 0x35: 0x68, 0x3f: 0x8f,
    0x55: 0x32,
}


CRC8_INIT = 0x00

def compute_crc8(buf, initValue):
    if len(buf) < 3:
        print "buffer too small"
    
    bufLen = ord(buf[1])
    
    if not _CRC8_values.has_key(bufLen):
        print "value 0x%x not handled" % bufLen
        return initValue
    
    return _CRC8_values[bufLen]
    